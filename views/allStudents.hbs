<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="images/favicon.png">
    <title>Campus Connect - All Student</title>

    <style>
        body {
            text-align: center;
            background-color: #f0f0f0;
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            overflow-x: hidden;
             background-image: linear-gradient(to right, rgba(255, 76, 5, 0.8), rgba(245, 180, 41, 0.7)), url(/images/allstu.jpg);
        }

        h1 {
            font-family: cursive;
            font-size: 40px;
        }

        button {
            height: 45px;
            width: 12rem;
            font-size: 18px;
            padding: 5px;
            margin: 0px 10px;
            border-radius: 25px;
            outline: none;
            border: none;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            cursor: pointer;
            background-color: #FF5C31; /* Blue color for buttons */
            color: white;
        }

        button:hover {
            background-color: rgb(240, 153, 129);
            transform: translateY(-2px);
            box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.3);
        }

        a {
            text-decoration: none;
            color: #FF5C31; /* Blue color for links */
        }

        a:hover {
            color: #FF5C31;
        }

        form {
            
            padding: 30px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);
            width: 45%; /* Adjusted width for each form */
            margin: 192px 369px 59px 405px;
        }

        .container {
            display: flex;
            justify-content: space-between; /* Adjusted layout to space between */
            margin-top: 20px; /* Adjusted margin top */
            position: relative; /* Added positioning */
        }

        .btn-container {
            margin: 30px auto;
        }

        h2 {
            margin-bottom: 20px;
            font-size: 28px;
            color: #333;
        }

        table {
            background-color: rgb(240, 153, 129); /* Blue color for table header */
            color: white;
            width: 90%;
            border-radius: 6px;
            margin-bottom: 30px;
            border-collapse: collapse;
        }

        table tr {
            height: 40px;
        }

        table td {
            padding: 10px;
            border: 1px solid #fff;
        }

        table td:first-child {
            border-top-left-radius: 6px;
            border-bottom-left-radius: 6px;
        }

        table td:last-child {
            border-top-right-radius: 6px;
            border-bottom-right-radius: 6px;
        }

        .search {
            margin-bottom: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .search label {
            font-size: 18px;
            margin-right: 10px;
        }

        .search input {
            height: 35px;
            width: 250px;
            padding: 5px;
            font-size: 18px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .getAll-btn {
            margin-bottom: 20px;
            background-color: #FF5C31; 
        }

        .get-btn {
            margin-bottom: 40px;
            background-color: #FF5C31; 
        }
        /* Styling for toaster */
        .toaster {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background-color: #FF5C31; /* Blue color for toaster */
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);
            z-index: 9999;
        }


        .campusconnect-whitelogo-img {
             position: absolute; /* Added to position the campusconnect image */
            top:18px; /* Adjusted top position */
            left: 135px; /* Adjusted left position */
            height: 205px; /* Adjusted height */
            z-index: 999;  /*Set a high z-index to ensure it appears above other content */
        }
           .navbar {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 11px 0;
            z-index: 9999;
            display: flex;
            justify-content: space-around;
        }

        .navbar a {
            text-decoration: none;
            color: #ff5c31;
            font-size: 18px;
            font-weight: bold;
            transition: 0.3s ease;
        }

        .navbar a:hover {
            color: #ff7e62;
        }
     

    </style>
</head>
<body>
    <div class="navbar">
             <a href="/addStudentPage">Add Student</a>
            <a href="/deleteStudentPage">Delete Student</a>
            <a href="/updateStudentPage">Update Student</a>
            <a href="/search">Search Student</a>
    </div>
    <div class="container">
    <a href="/index"><img src="images\campus connect-whitelogo.png" alt="CampusConnect" class="campusconnect-whitelogo-img" /></a>
    <form action="" id="form1">
        <h2>Students List</h2>
        <button type="submit" class="getAll-btn">Get Students</button>
         <button class="export-btn">Export to Excel</button>
        <table class="form1-table">
            <thead>
            <tr>
                <td>Name</td>
                <td>Roll Number</td>
                <td>Email</td>
            </tr>
            </thead>
        </table>
    </form>
</div>

<script>

    // Toaster maker function
    function showToast(message) {
        const toaster = document.createElement("div");
        toaster.classList.add("toaster");
        toaster.textContent = message;
        document.body.appendChild(toaster);
        setTimeout(() => {
            toaster.remove();
        }, 3000);
    }

    // Forms and button event listener
    let btn1 = document.querySelector(".getAll-btn");
    let table1 = document.querySelector(".form1-table");
    btn1.addEventListener('click', async (event) => {
        event.preventDefault();
        try {
            let response = await axios.get(`http://localhost:4000/students`);
            let data = response.data;
            table1.innerHTML = `<thead>
                <tr>
                    <td>Name</td>
                    <td>Roll Number</td>
                    <td>Email</td>
                </tr>
            </thead>`;
            data.map((stu) => {
                let tr = document.createElement('tr');
                let td1 = document.createElement('td');
                let td2 = document.createElement('td');
                let td3 = document.createElement('td');
                td1.textContent = stu.name;
                td2.textContent = stu.rollno;
                td3.textContent = stu.email;
                tr.appendChild(td1);
                tr.appendChild(td2);
                tr.appendChild(td3);
                table1.appendChild(tr);
            });
        } catch (err) {
            console.log("Error occurred!");
        }
    });

     //  Export button
    let exportBtn = document.querySelector(".export-btn");
    exportBtn.addEventListener('click', async () => {
        event.preventDefault();
    try {
        let response = await axios.get(`http://localhost:4000/students`);
        let data = response.data;

        // Convert data to CSV format
        let csvContent = "Name,";
        csvContent += "Roll Number,Email\n";
        data.forEach((student) => {
            csvContent += `${student.name},${student.rollno},${student.email}\n`;
        });

        // Create a blob
        let blob = new Blob([csvContent], { type: 'text/csv' });

        // Create a URL for the blob
        let url = window.URL.createObjectURL(blob);

        // Create a downloadable link
        let link = document.createElement("a");
        link.setAttribute("href", url);
        link.setAttribute("download", "students.csv");
        link.style.display = 'none'; // Hide the link

        // Append the link to the document body
        document.body.appendChild(link);

        // Simulate click on the link
        link.click();

        // Remove the link from the document body
        document.body.removeChild(link);
    } catch (err) {
        console.error("Error occurred while exporting data:", err);
    }
});

</script>
    
</body>
</html>